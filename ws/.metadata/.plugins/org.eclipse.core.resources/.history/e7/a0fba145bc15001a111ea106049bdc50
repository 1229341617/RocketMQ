package com.limao.rocketmq._03_proorconsmessage.product;

import org.apache.rocketmq.client.exception.MQClientException;
import org.apache.rocketmq.client.producer.DefaultMQProducer;
import org.apache.rocketmq.client.producer.SendCallback;
import org.apache.rocketmq.client.producer.SendResult;
import org.apache.rocketmq.common.message.Message;
import org.apache.rocketmq.remoting.common.RemotingHelper;

public class AsyncMQProducer {
	private static DefaultMQProducer producer;
	
	static {
		try {
			producer = new DefaultMQProducer("order_producer_group");
			producer.setNamesrvAddr("localhost:8080");
			producer.start();
			
			//异步发送失败时,重试的次数
			producer.setRetryTimesWhenSendAsyncFailed(5);
		} catch (MQClientException e) {
			e.printStackTrace();
		}
	}
	
	public static void send(String topic, String message) throws Exception {
		Message msg = new Message(topic,
									"",
									message.getBytes(RemotingHelper.DEFAULT_CHARSET));
		
		//1.同步发送消息：必须等待消息的返回,否则会阻塞到此处
		SendResult sendResult = syncProducer.send(msg);
		//1.通过异步的方式发送
		producer.send(msg, new SendCallback() {
			public void onSuccess(SendResult sendResult) {
				//消息发送成功时的处理
			}
			
			public void onException(Throwable e) {
				//发送消息异常时的处理
			}
		});
		
		
		producer.sendOneway(msg);
	}
	
	
	
}
